package fr.afpa.math;

//import static java.lang.Math.*;
import javax.swing.JOptionPane;

import static fr.afpa.math.Math.factorielleFor;
import static fr.afpa.math.Math.factorielleWhile;
import static fr.afpa.math.Math.facto;

/**
 * @author 77011-05-10 Ratiba tests Unitairse des métodes : récursivité et par
 *         une boucle FOR et une boucle While les testes prennent plusieurs
 *         valeurs avec les methodes de test
 *
 *         factorielleTestZero(); factorielleTest2();
 *         factorielleTestMoinsSept();
 *
 *
 */

  

public class TestMath {
	
	static String saisie;
	static long factN,n;

	public static void main(String[] args) {
		
		
		
					///////************************//////////
					///////// TEST UNITAIRES        ////////
					///////**********************///////////

					//// **********************************//////
					//////////// Swing JOption /////////////
					////// *******************************//////

		 saisie = null;

		 	do {
			try {	
			saisie = JOptionPane.showInputDialog("Entrez un nom : ");
			}catch(NumberFormatException  e) {
				String 	message=("le type de la variable doit etre un string !");
				e.getMessage();
				continue;
				}
			if (saisie != null) {
				
				
				 n = Long.parseLong(saisie);
				
			      factN = Math.factorielleFor(n); // 1ER FONCTION
			     // factN = Math.facto(n); // 2  FONCTION
			      //factN = Math.factorielleWhile(n); // 3 FONCTION
				
				
				
				if (factN < 0) {
					JOptionPane.showMessageDialog(null,
							"Résultat impossible " + "pour ce nombre :  " + n + "code erreur : " + factN);

				} else {

					JOptionPane.showMessageDialog(null, n + " ! vaut " + factN);

				}
			}

		} while (saisie != null);

				//// **********************************//////
				//////////// Swing JOption /////////////
				////// *******************************//////

		factorielleTestZero();
		factorielleTest2();
		factorielleTestMoinsSept();

	}

	///////////////////////////////////////////////
	//////////// factorielleTestZero() ////////////
	//////////////////////////////////////////////

	public static void factorielleTestZero() {

		if (facto(0) == 1) {

			System.out.println(" factorielleTestZero() : Test OK");
		} else {
			System.err.println(" : Test NOK : La factorielle de zero vaut 1 ");
		}

	}

	///////////////////////////////////////////////
	//////////// factorielleTest2() //////////////
	//////////////////////////////////////////////

	public static void factorielleTest2() {

		System.out.println("   factorielleTest2() :Pas tres précis, on ne sais pas quel test échoué ");
		if (facto(0) == 1 && facto(1) == 1 && facto(3) == 6) {

			System.out.println("factorielleTest2() : Test OK");
		} else {

			System.err.println(" factorielleTest2() : Test NOK : Le factorielleTest2 à échoué ! ");

		}

	}

	////////////////////////////////////////////////////
	//////////// factorielleTestMoinsSept() ////////////
	///////////////////////////////////////////////////

	public static void factorielleTestMoinsSept() {

		if (facto(-7) == -1) {

			System.out.println(" factorielleTestMoinsSept() : Test OK ");
		} else {

			System.out.println("factorielleTestMoinsSept() : Test NOK : La factorielle de -7 retourne -1 ");

		}

	}

}
